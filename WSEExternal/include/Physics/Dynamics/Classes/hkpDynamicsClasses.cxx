/* 
 * 
 * Confidential Information of Telekinesys Research Limited (t/a Havok). Not for disclosure or distribution without Havok's
 * prior written consent. This software contains code, techniques and know-how which is confidential and proprietary to Havok.
 * Level 2 and Level 3 source code contains trade secrets of Havok. Havok Software (C) Copyright 1999-2009 Telekinesys Research Limited t/a Havok. All Rights Reserved. Use of this software is subject to the terms of an end user license agreement.
 * 
 */

// Autogenerated by genRegister.py

#include <Physics/Dynamics/Action/hkpActionClass.cpp>
#include <Physics/Dynamics/Action/hkpArrayActionClass.cpp>
#include <Physics/Dynamics/Action/hkpBinaryActionClass.cpp>
#include <Physics/Dynamics/Action/hkpUnaryActionClass.cpp>
#include <Physics/Dynamics/Common/hkpMaterialClass.cpp>
#include <Physics/Dynamics/Common/hkpPropertyClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/BallAndSocket/hkpBallAndSocketConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/Hinge/hkpHingeConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/LimitedHinge/hkpLimitedHingeConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/PointToPath/hkpLinearParametricCurveClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/PointToPath/hkpParametricCurveClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/PointToPath/hkpPointToPathConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/PointToPlane/hkpPointToPlaneConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/Prismatic/hkpPrismaticConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/Ragdoll/hkpRagdollConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/StiffSpring/hkpStiffSpringConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/Wheel/hkpWheelConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Bilateral/rotational/hkpRotationalConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Breakable/hkpBreakableConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Chain/BallSocket/hkpBallSocketChainDataClass.cpp>
#include <Physics/Dynamics/Constraint/Chain/HingeLimits/hkpHingeLimitsDataClass.cpp>
#include <Physics/Dynamics/Constraint/Chain/Powered/hkpPoweredChainDataClass.cpp>
#include <Physics/Dynamics/Constraint/Chain/RagdollLimits/hkpRagdollLimitsDataClass.cpp>
#include <Physics/Dynamics/Constraint/Chain/StiffSpring/hkpStiffSpringChainDataClass.cpp>
#include <Physics/Dynamics/Constraint/Chain/hkpConstraintChainDataClass.cpp>
#include <Physics/Dynamics/Constraint/Chain/hkpConstraintChainInstanceActionClass.cpp>
#include <Physics/Dynamics/Constraint/Chain/hkpConstraintChainInstanceClass.cpp>
#include <Physics/Dynamics/Constraint/ConstraintKit/hkpGenericConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/ConstraintKit/hkpGenericConstraintSchemeClass.cpp>
#include <Physics/Dynamics/Constraint/Malleable/hkpMalleableConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/Motor/Callback/hkpCallbackConstraintMotorClass.cpp>
#include <Physics/Dynamics/Constraint/Motor/Position/hkpPositionConstraintMotorClass.cpp>
#include <Physics/Dynamics/Constraint/Motor/SpringDamper/hkpSpringDamperConstraintMotorClass.cpp>
#include <Physics/Dynamics/Constraint/Motor/Velocity/hkpVelocityConstraintMotorClass.cpp>
#include <Physics/Dynamics/Constraint/Motor/hkpConstraintMotorClass.cpp>
#include <Physics/Dynamics/Constraint/Motor/hkpLimitedForceConstraintMotorClass.cpp>
#include <Physics/Dynamics/Constraint/Pulley/hkpPulleyConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/hkpConstraintDataClass.cpp>
#include <Physics/Dynamics/Constraint/hkpConstraintInstanceClass.cpp>
#include <Physics/Dynamics/Entity/hkpBreakableBodyClass.cpp>
#include <Physics/Dynamics/Entity/hkpEntityClass.cpp>
#include <Physics/Dynamics/Entity/hkpRigidBodyClass.cpp>
#include <Physics/Dynamics/Motion/Rigid/ThinBoxMotion/hkpThinBoxMotionClass.cpp>
#include <Physics/Dynamics/Motion/Rigid/hkpBoxMotionClass.cpp>
#include <Physics/Dynamics/Motion/Rigid/hkpCharacterMotionClass.cpp>
#include <Physics/Dynamics/Motion/Rigid/hkpFixedRigidMotionClass.cpp>
#include <Physics/Dynamics/Motion/Rigid/hkpKeyframedRigidMotionClass.cpp>
#include <Physics/Dynamics/Motion/Rigid/hkpSphereMotionClass.cpp>
#include <Physics/Dynamics/Motion/hkpMotionClass.cpp>
#include <Physics/Dynamics/Phantom/hkpAabbPhantomClass.cpp>
#include <Physics/Dynamics/Phantom/hkpCachingShapePhantomClass.cpp>
#include <Physics/Dynamics/Phantom/hkpPhantomClass.cpp>
#include <Physics/Dynamics/Phantom/hkpShapePhantomClass.cpp>
#include <Physics/Dynamics/Phantom/hkpSimpleShapePhantomClass.cpp>
#include <Physics/Dynamics/World/Memory/hkpWorldMemoryAvailableWatchDogClass.cpp>
#include <Physics/Dynamics/World/Simulation/hkpSimulationClass.cpp>
#include <Physics/Dynamics/World/hkpPhysicsSystemClass.cpp>
#include <Physics/Dynamics/World/hkpWorldCinfoClass.cpp>
#include <Physics/Dynamics/World/hkpWorldClass.cpp>
#include <Physics/Dynamics/World/hkpWorldObjectClass.cpp>

/*
* Havok SDK - NO SOURCE PC DOWNLOAD, BUILD(#20090704)
* 
* Confidential Information of Havok.  (C) Copyright 1999-2009
* Telekinesys Research Limited t/a Havok. All Rights Reserved. The Havok
* Logo, and the Havok buzzsaw logo are trademarks of Havok.  Title, ownership
* rights, and intellectual property rights in the Havok software remain in
* Havok and/or its suppliers.
* 
* Use of this software for evaluation purposes is subject to and indicates
* acceptance of the End User licence Agreement for this product. A copy of
* the license is included with this software and is also available at www.havok.com/tryhavok.
* 
*/
